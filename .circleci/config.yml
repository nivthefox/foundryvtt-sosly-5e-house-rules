version: 2.1

orbs:
  node: circleci/node@5

jobs:
  integration-tests:
    machine:
      image: ubuntu-2204:2023.10.1
    resource_class: large
    steps:
      - checkout
      - node/install:
          node-version: "20"
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build module
          command: npm run build
      - run:
          name: Install Playwright browsers
          command: npx playwright install chromium
      - run:
          name: Start FoundryVTT container
          command: |
            echo "Starting FoundryVTT..."
            docker compose -f docker-compose.test.yml up -d
      - run:
          name: Wait for FoundryVTT initial startup
          command: |
            echo "Waiting for FoundryVTT to start..."
            for i in {1..5}; do
              if curl -f http://localhost:30000; then
                echo "FoundryVTT is ready!"
                exit 0
              fi
              echo "Waiting... ($i/5)"
              sleep 5
            done
            echo "FoundryVTT failed to start after 25 seconds"
            exit 1
      - run:
          name: Run initial Foundry setup (license, etc.)
          command: node tools/setup_foundry.mjs
      - run:
          name: Install sosly module and pre-configured world
          command: |
            echo "Installing sosly module..."
            docker compose -f docker-compose.test.yml cp ./ foundry:/data/Data/modules/sosly-5e-house-rules/
            echo "Installing pre-configured test world..."
            docker compose -f docker-compose.test.yml cp ./tools/fixtures/test-world foundry:/data/Data/worlds/
            echo "Gracefully shutting down FoundryVTT..."
            docker compose -f docker-compose.test.yml exec foundry pkill -HUP -f "node"
            sleep 5
            echo "Restarting container to reload with new world..."
            docker compose -f docker-compose.test.yml restart foundry
      - run:
          name: Wait for FoundryVTT to reload with test world
          command: |
            echo "Waiting for FoundryVTT to reload with test world..."
            for i in {1..15}; do
              if curl -f http://localhost:30000; then
                echo "FoundryVTT is ready with test world!"
                exit 0
              fi
              echo "Waiting... ($i/15)"
              sleep 5
            done
            echo "FoundryVTT failed to reload after 75 seconds"
            exit 1
      - run:
          name: Run integration tests
          command: npm run test:integration
      - run:
          name: Package test artifacts
          command: |
            if [ -d "playwright-report" ]; then
              zip -r playwright-report.zip playwright-report/
            fi
            if [ -d "test-results" ]; then
              zip -r test-results.zip test-results/
            fi
          when: always
      - store_artifacts:
          path: playwright-report.zip
          destination: playwright-report.zip
      - store_artifacts:
          path: test-results.zip
          destination: test-results.zip
      - run:
          name: Docker logs on failure
          command: docker compose -f docker-compose.test.yml logs
          when: on_fail
      - run:
          name: Stop containers
          command: docker compose -f docker-compose.test.yml down
          when: always

workflows:
  test:
    jobs:
      - integration-tests:
          context:
            - foundry-credentials